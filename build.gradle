plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // build 에서 3종류 - ant , maven , gradle
    // ant는 직접 관리 필수 나머지는 라이브러리 자동 , gradle 이 가장 진보

    //jsonwebtoken maven
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    //log4jdbc 라이브러리 추가 , Persistence Query문 / 결과값 확인
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    //swagger 라이브러리 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 유효성 검사 - 프론트에서 넘어오는 데이터가 내가 원하는 데이터인지 확인하기 위해서 사용
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    //implenmentation 은 컴파일도 해줌

    compileOnly 'org.projectlombok:lombok'
    // compile 전용 , jar 로 압축 , setter&getter
    // 인터프리터와 다르게 컴파일을 해야함 - 실행하면서 , 컴파일 시점에만 라이브러리 활성화 , 내용 변경 시 다시 실행하면서 컴파일 해야함
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // 컴파일에서 고려x , 서버 on / off 만 생각 , compileonly 보다 가벼움 , 개발에서만 사용
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // 실행할때만 , 개발에서 상관없음 , developmentonly 보다 무거움
    // 런타임 시에 라이브러리가 필요한 경우 라이브러리를 프로젝트에 추가
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs "-Xshare:off"
}
