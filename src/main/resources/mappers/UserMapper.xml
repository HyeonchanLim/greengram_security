<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.greengram.user.UserMapper">
    <insert id="insUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user
        SET uid = #{uid}
        , upw = #{upw}
        , pic = #{pic}
        , nick_name = #{nickName}
    </insert>
    <select id="selUserByUid">
        SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , upw , pic
        FROM user
        WHERE uid = #{uid} <!-- uid 자리에 asdf 문자열 아무꺼나 써도 괜찮음 -->
    </select>
    <!--
    follow 에 안 쓰고 user 에 쓴 이유는 기준점을 user 로 잡았기 때문이다
    user 를 참조하는 데이터 기반이라 user 에 작성하였다.
    -->
    <select id="selUserInfo2">
        SELECT A.user_id AS userId , A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id,F4.user_id) AS myFeedLikeCount
        <!-- myfeedLikeCount -> 내 피드의 좋아요 카운트 -->
        , MAX(DISTINCT if(F1.from_user_id = #{signedUserId}, 1, 0))
        + MAX(DISTINCT if(F2.to_user_id = #{signedUserId}, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON A.user_id = F4.user_id
        WHERE A.user_id = #{profileUserId};

        <!--
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = #{profileUserId}
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = #{profileUserId}
        -->
    </select>

    <update id="updUserPic">
        UPDATE user
        <set>
            <if test="picName != null">
                pic = #{picName}
            </if>
        </set>
        WHERE user_id = #{signedUserId}
    </update>

</mapper>
